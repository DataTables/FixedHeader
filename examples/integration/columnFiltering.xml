<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="10">

<css lib="datatables fixedheader">
	tfoot input {
		width: 100%;
	}
</css>
<js lib="jquery datatables fixedheader">
<![CDATA[

$('#example').DataTable({
	initComplete: function () {
		this.api()
			.columns()
			.every(function () {
				var column = this;
				var title = column.footer().textContent;

				// Create input element and add event listener
				$('<input type="text" placeholder="Search ' + title + '" />')
					.appendTo($(column.footer()).empty())
					.on('keyup change clear', function () {
						if (column.search() !== this.value) {
							column.search(this.value).draw();
						}
					});
			});
	},
	fixedHeader: {
		footer: true
	}
});

]]>
</js>

<js-vanilla><![CDATA[

new DataTable('#example', {
	initComplete: function () {
		this.api()
			.columns()
			.every(function () {
				let column = this;
				let title = column.footer().textContent;

				// Create input element
				let input = document.createElement('input');
				input.placeholder = title;
				column.footer().replaceChildren(input);

				// Event listener for user input
				input.addEventListener('keyup', () => {
					if (column.search() !== this.value) {
						column.search(input.value).draw();
					}
				});
			});
	},
	fixedHeader: {
		footer: true
	}
});
]]></js-vanilla>

<title lib="FixedHeader">Column filtering</title>

<info><![CDATA[

This example demonstrates FixedHeader being used with individual column filters, placed into the table's footer.

]]></info>

</dt-example>